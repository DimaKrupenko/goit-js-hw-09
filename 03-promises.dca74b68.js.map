{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,QAApC,MACMC,EAAQF,SAASC,cAAc,yBAC/BE,EAAOH,SAASC,cAAc,wBAC9BG,EAASJ,SAASC,cAAc,0BAGtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAZMP,SAASC,cAAc,2BAgB/Be,iBAAiB,SAASC,IACnCA,EAAIC,iBAEJ,IAAIC,EAAaC,SAASlB,EAAMmB,OAC5BC,EAAYF,SAASjB,EAAKkB,OAC9B,MAAME,EAAcH,SAAShB,EAAOiB,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCnB,EAAcmB,EAAGL,GACdM,MAAK,EAACnB,SAAEA,EAAUS,MAAAW,MACjBC,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBvB,QAAiBoB,MAAU,IAGnDI,OAAM,EAACxB,SAAEA,EAAUS,MAAAgB,MAClBJ,EAAA7B,GAAS8B,OAAOI,QACd,sBAAoB1B,QAAeyB,MAAU,IAGhDE,SAAQ,IAAMC,QAAQC,IAAI,qBAC1BhB,GAAcG,CAAS","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst delay = document.querySelector('input[name = \"delay\"]');\nconst step = document.querySelector('input[name = \"step\"]');\nconst amount = document.querySelector('input[name = \"amount\"]');\nconst btnPromise = document.querySelector('button[type = \"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbtnPromise.addEventListener('click', evt => {\n  evt.preventDefault();\n\n  let delayFirst = parseInt(delay.value);\n  let stepDelay = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayFirst)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => console.log('Promise settled')),\n      (delayFirst += stepDelay);\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","evt","preventDefault","delayFirst","parseInt","value","stepDelay","amountValue","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","finally","console","log"],"version":3,"file":"03-promises.dca74b68.js.map"}