{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAQF,SAASC,cAAc,yBAC/BE,EAAOH,SAASC,cAAc,wBAC9BG,EAASJ,SAASC,cAAc,0BAChCI,EAAaL,SAASC,cAAc,2BAE1C,IAAIK,EAEJ,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCT,EAAUU,YAAW,KACfH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAIbV,EAAKmB,iBAAiB,SAASC,IAC7B,IAAIC,EAAaC,SAASnB,EAAMoB,OAC5BC,EAAYF,SAASlB,EAAKmB,OAC9B,MAAME,EAAcH,SAASjB,EAAOkB,OAEpCjB,EAAWa,iBAAiB,SAASO,IACnCA,EAAIC,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrCpB,EAAcoB,EAAGP,GACdQ,MAAK,EAACpB,SAAEA,EAAUS,MAAAY,MACjBC,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBxB,QAAiBqB,MAAU,IAGnDI,OAAM,EAACzB,SAAEA,EAAUS,MAAAiB,MAClBJ,EAAAjC,GAASkC,OAAOI,QACd,sBAAoB3B,QAAe0B,MAAU,IAGhDE,SAAQ,IAAMC,QAAQC,IAAI,qBAC1BlB,GAAcG,CAAS,GAE5B,IAGJlB,EAAWa,iBAAiB,SAE5B,WACEqB,cAAcjC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst delay = document.querySelector('input[name = \"delay\"]');\nconst step = document.querySelector('input[name = \"step\"]');\nconst amount = document.querySelector('input[name = \"amount\"]');\nconst btnPromise = document.querySelector('button[type = \"submit\"]');\n\nlet startId;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    startId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('input', evt => {\n  let delayFirst = parseInt(delay.value);\n  let stepDelay = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  btnPromise.addEventListener('click', evt => {\n    evt.preventDefault();\n\n    for (let i = 1; i <= amountValue; i += 1) {\n      createPromise(i, delayFirst)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        })\n        .finally(() => console.log('Promise settled')),\n        (delayFirst += stepDelay);\n    }\n  });\n});\n\nbtnPromise.addEventListener('click', onStop);\n\nfunction onStop() {\n  clearInterval(startId);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$btnPromise","$47d4ff9957288465$var$startId","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","evt1","delayFirst","parseInt","value","stepDelay","amountValue","evt","preventDefault","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","finally","console","log","clearInterval"],"version":3,"file":"03-promises.c4d2c08c.js.map"}