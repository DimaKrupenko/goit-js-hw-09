{"mappings":"iiBAAA,IAQIA,EARJC,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAQF,SAASC,cAAc,yBAC/BE,EAAOH,SAASC,cAAc,wBAC9BG,EAASJ,SAASC,cAAc,0BAChCI,EAAaL,SAASC,cAAc,2BAI1C,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtClB,EAAUmB,YAAW,WACfH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IAIPT,EAAKkB,iBAAiB,SAAS,SAAAC,GAC7B,IAAIC,EAAaC,SAASlB,EAAMmB,OAC5BC,EAAYF,SAASjB,EAAKkB,OACxBE,EAAcH,SAAShB,EAAOiB,OAEpChB,EAAWY,iBAAiB,SAAS,SAAAO,GACnCA,EAAIC,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrCpB,EAAcoB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALZ,MACjBc,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAU4B,EAAKP,EAALZ,MAClBc,EAAAjC,GAASkC,OAAOK,QACd,sBAAqCH,OAAf1B,EAAS,QAAY0B,OAANE,EAAM,M,IAG9CE,SAAQ,W,OAAMC,QAAQC,IAAI,kB,IAC1BpB,GAAcG,C,OAKvBjB,EAAWY,iBAAiB,SAE5B,WACEuB,cAAc5C,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst delay = document.querySelector('input[name = \"delay\"]');\nconst step = document.querySelector('input[name = \"step\"]');\nconst amount = document.querySelector('input[name = \"amount\"]');\nconst btnPromise = document.querySelector('button[type = \"submit\"]');\n\nlet startId;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    startId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('input', evt => {\n  let delayFirst = parseInt(delay.value);\n  let stepDelay = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  btnPromise.addEventListener('click', evt => {\n    evt.preventDefault();\n\n    for (let i = 1; i <= amountValue; i += 1) {\n      createPromise(i, delayFirst)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        })\n        .finally(() => console.log('Promise settled')),\n        (delayFirst += stepDelay);\n    }\n  });\n});\n\nbtnPromise.addEventListener('click', onStop);\n\nfunction onStop() {\n  clearInterval(startId);\n}\n"],"names":["$ce04d3a99e08e73b$var$startId","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$btnPromise","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","evt1","delayFirst","parseInt","value","stepDelay","amountValue","evt","preventDefault","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","finally","console","log","clearInterval"],"version":3,"file":"03-promises.c4fade3e.js.map"}